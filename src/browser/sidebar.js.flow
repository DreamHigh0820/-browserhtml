/* @flow */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

import type {Address, DOM} from "reflex"
import {Effects} from "reflex"
import * as Toolbar from "./sidebar/toolbar"
import * as Tabs from "./sidebar/tabs"
import * as Stopwatch from "../common/stopwatch"
import * as WebViews from "./web-views"
import type {Integer, Float} from "../common/prelude"


export type ID = Tabs.ID

export type Display =
  { x: Integer
  , shadow: Float
  , spacing: Integer
  , toolbarOpacity: Float
  , titleOpacity: Float
  , tabWidth: Integer
  }

export type Model =
  { isAttached: boolean
  , isOpen: boolean
  , animation: Stopwatch.Model
  , display: Display
  , toolbar: Toolbar.Model
  }

export type Action =
  | { type: "CreateWebView" }
  | { type: "Attach" }
  | { type: "Detach" }
  | { type: "Open" }
  | { type: "Close" }
  | { type: "Activate" }
  | { type: "Animation"
    , action: Stopwatch.Action
    }
  | { type: "AnimationEnd" }
  | { type: "CloseTab"
    , id: Tabs.ID
    }
  | { type: "ActivateTab"
    , id: Tabs.ID
    }
  | { type: "Tabs"
    , source: Tabs.Action
    }
  | { type: "Toolbar"
    , source: Toolbar.Action
    }

declare export function init
  ():
  [Model, Effects<Action>]

declare export function update
  (model:Model, action:Action):
  [Model, Effects<Action>]

declare export function view
  (model:Model, webViews:WebViews.Model, address:Address<Action>):
  DOM
