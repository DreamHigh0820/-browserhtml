/* @flow */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

import {Effects} from "reflex"
import type {Address, DOM} from "reflex"
import type {Time, Float} from "../../common/prelude"

export type {Time}

export type Display =
  { opacity: number
  , x: number
  }

export type Idle =
  { status: 'Idle'
  , updateTime: null
  , loadStart: null
  , connectTime: null
  , loadEnd: null
  , display: Display
  }

export type Connecting =
  { status: 'Connecting'
  , updateTime: Time
  , loadStart: Time
  , connectTime: null
  , loadEnd: null
  , display: Display
  }

export type Loading =
  { status: 'Loading'
  , updateTime: Time
  , loadStart: Time
  , connectTime: Time
  , loadEnd: null
  , display: Display
  }

export type Loaded =
  { status: 'Loaded'
  , updateTime: Time
  , loadStart: Time
  , connectTime: Time
  , loadEnd: Time
  , display: Display
  }

// Model is type union here where different fields are non `null` at
// different stages of progress. This allows for example `progress(model)`
// function to pattern match on `status` and then use fields available
// fields for that stage of the progress. Not that alternative approach
// would have used optional fields but that would mean that each progress
// computing funciton per stage would manually have to verify non null-ness
// of each field it uses.
export type Model =
  | Idle
  | Connecting
  | Loading
  | Loaded

export type Action =
  | { type: "Start"
    , time: Time
    }
  | { type: "LoadEnd"
    , time: Time
    }
  | { type: "Connect"
    , time: Time
    }
  | { type: "Tick"
    , time: Time
    }
  | { type: "NoOp" }

declare export function Start
  (time:Time):
  Action

declare export function Connect
  (time:Time):
  Action

declare export function LoadEnd
  (time:Time):
  Action

// Implied to be 0.0 - 1.0 range
export type LoadProgress = Float

declare export function progress
  (model:Model):
  LoadProgress

declare export function init
  ():
  [Model, Effects<Action>]

declare export function update
  (model:Model, action:Action):
  [Model, Effects<Action>]

declare export function view
  (model:Model):
  DOM
